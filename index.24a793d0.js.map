{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAgB,EAAG,SAAS,gBAAgB,CAAC,aAC/C,EAAa,EAAG,SAAS,gBAAgB,CAAC,aACxC,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAY,CAAA,EACZ,EAAoB,KACpB,EAAW,KAET,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,SAAS,CAAC,GAAG,CAAC,qBAEnB,IAAM,EAAc,SAAC,CAAA,CAAM,CAAA,CAAO,CAAlC,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAOrC,OALA,EAAM,YAAY,CAAC,OAAQ,GAC3B,EAAM,YAAY,CAAC,OAAQ,GAC3B,EAAM,YAAY,CAAC,UAAW,GAC9B,EAAM,YAAY,CAAC,WAAY,CAAA,GAExB,CACT,EAEM,EAAc,SAAC,CAArB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAIrC,OAFA,EAAM,WAAW,CAAG,EAEb,CACT,EAEM,EAAe,SAAC,CAAA,CAAM,CAA5B,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,UAKtC,OAHA,EAAO,WAAW,CAAG,EACrB,EAAO,YAAY,CAAC,QAAS,GAEtB,CACT,EAEM,EAAY,EAAY,OAAQ,OAAQ,QACxC,EAAgB,EAAY,OAAQ,WAAY,YAChD,EAAW,EAAY,SAAU,MAAO,OACxC,EAAc,EAAY,SAAU,SAAU,UAE9C,EAAS,SAAS,aAAa,CAAC,SAEtC,CAAA,EAAO,WAAW,CAAG,gBAErB,IAAM,EAAY,EAAY,SACxB,EAAgB,EAAY,aAC5B,EAAe,EAAY,YAC3B,EAAW,EAAY,QACvB,EAAc,EAAY,WAE1B,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tableHeaders = _to_consumable_array(document.querySelectorAll(\"thead th\"));\nvar tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\nvar tbody = document.querySelector(\"tbody\");\nvar orderSort = true;\nvar lastClickedHeader = null;\nvar indexRow = null;\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar createInput = function(type, value, dataQa) {\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    input.setAttribute(\"name\", value);\n    input.setAttribute(\"data-qa\", dataQa);\n    input.setAttribute(\"required\", true);\n    return input;\n};\nvar createLabel = function(text) {\n    var label = document.createElement(\"label\");\n    label.textContent = text;\n    return label;\n};\nvar createOption = function(text, value) {\n    var option = document.createElement(\"option\");\n    option.textContent = text;\n    option.setAttribute(\"value\", value);\n    return option;\n};\nvar inputName = createInput(\"text\", \"name\", \"name\");\nvar inputPosition = createInput(\"text\", \"position\", \"position\");\nvar inputAge = createInput(\"number\", \"age\", \"age\");\nvar inputSalary = createInput(\"number\", \"salary\", \"salary\");\nvar button = document.createElement(\"button\");\nbutton.textContent = \"Save to table\";\nvar labelName = createLabel(\"Name:\");\nvar labelPosition = createLabel(\"Position:\");\nvar labelCountry = createLabel(\"Country:\");\nvar labelAge = createLabel(\"Age:\");\nvar labelSalary = createLabel(\"Salary:\");\nvar selectCountry = document.createElement(\"select\");\nform.setAttribute(\"id\", \"formEmployees\");\nselectCountry.setAttribute(\"name\", \"office\");\nselectCountry.setAttribute(\"data-qa\", \"office\");\nbutton.setAttribute(\"type\", \"submit\");\nbutton.setAttribute(\"form\", \"formEmployees\");\nvar countries = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\ncountries.forEach(function(c) {\n    return selectCountry.appendChild(createOption(c, c));\n});\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelCountry.appendChild(selectCountry);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\nform.append(labelName, labelPosition, labelCountry, labelAge, labelSalary, button);\ndocument.body.appendChild(form);\ntableRows.forEach(function(tr) {\n    tr.children[0].setAttribute(\"data-row\", \"name\");\n    tr.children[1].setAttribute(\"data-row\", \"position\");\n    tr.children[2].setAttribute(\"data-row\", \"office\");\n    tr.children[3].setAttribute(\"data-row\", \"age\");\n    tr.children[4].setAttribute(\"data-row\", \"salary\");\n});\nvar showNotification = function(message, type) {\n    var div = document.createElement(\"div\");\n    div.setAttribute(\"data-qa\", \"notification\");\n    div.style.display = \"flex\";\n    div.style.justifyContent = \"center\";\n    div.style.alignItems = \"center\";\n    div.classList.add(\"notification\", type);\n    div.textContent = message;\n    document.body.appendChild(div);\n    setTimeout(function() {\n        div.remove();\n    }, 3000);\n};\nvar validateInput = function(obj) {\n    if (obj.name.length < 4 || !obj.name.trim()) {\n        showNotification(\"Name must be at least 4 letters\", \"error\");\n        return false;\n    }\n    if (obj.position.length === 0 || !obj.position.trim()) {\n        showNotification(\"Position is required\", \"error\");\n        return false;\n    }\n    if (obj.age < 18 || obj.age > 90) {\n        showNotification(\"Age must be between 18 and 90\", \"error\");\n        return false;\n    }\n    if (obj.salary.length === 0 || obj.salary < 0) {\n        showNotification(\"Salary is required\", \"error\");\n        return false;\n    }\n    return true;\n};\nvar addComa = function(value) {\n    var improvedValue = (\"\" + value).split(\"\").reverse();\n    var result = \"\";\n    for(var i = 0; i < improvedValue.length; i++){\n        if (improvedValue.length >= 3) {\n            if (i % 3 === 0) result += \",\";\n            result += improvedValue[i];\n        } else return value;\n    }\n    result = result.split(\"\").reverse().join(\"\");\n    if (result.endsWith(\",\")) result = result.slice(0, -1);\n    return result;\n};\nbutton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var formDataObj = Object.fromEntries(formData);\n    if (validateInput(formDataObj)) {\n        var tr = document.createElement(\"tr\");\n        for(var key in formDataObj){\n            var td = document.createElement(\"td\");\n            td.setAttribute(\"data-qa\", key);\n            td.setAttribute(\"data-row\", key);\n            var value = formDataObj[key];\n            if (key === \"salary\") td.textContent = \"$\".concat(addComa(value));\n            else td.textContent = value;\n            tr.appendChild(td);\n        }\n        tbody.appendChild(tr);\n        showNotification(\"You added the new employee\", \"success\");\n        editRow(tr);\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = form[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var input = _step.value;\n                input.value = \"\";\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    updateTableRows();\n});\nvar updateTableRows = function() {\n    tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    tableRows.forEach(function(row, i) {\n        row.addEventListener(\"click\", function() {\n            var selectedRow = tableRows.find(function(r) {\n                return r.classList.contains(\"active\");\n            });\n            if (indexRow !== i) {\n                if (selectedRow) selectedRow.classList.remove(\"active\");\n                row.classList.add(\"active\");\n                indexRow = i;\n            }\n        });\n    });\n};\nupdateTableRows();\nvar validateField = function(field, value) {\n    switch(field){\n        case \"name\":\n            if (value.length < 4 || !value.trim()) {\n                showNotification(\"Name must be at least 4 letters\", \"error\");\n                return false;\n            }\n            break;\n        case \"position\":\n            if (value.length === 0 || !value.trim()) {\n                showNotification(\"Position is required\", \"error\");\n                return false;\n            }\n            break;\n        case \"office\":\n            if (value.length === 0 || !value.trim()) {\n                showNotification(\"Country is required\", \"error\");\n                return false;\n            }\n            break;\n        case \"age\":\n            if (value < 18 || value > 90 || !value.trim() || value.toLowerCase() !== value.toUpperCase()) {\n                showNotification(\"Age must be between 18 and 90\", \"error\");\n                return false;\n            }\n            break;\n        case \"salary\":\n            if (value.length === 0 || !value.trim() || +value < 0 || value.toLowerCase() !== value.toUpperCase()) {\n                showNotification(\"Salary is required\", \"warning\");\n                return false;\n            }\n            break;\n        default:\n            return true;\n    }\n    return true;\n};\nvar editRow = function(row) {\n    row.addEventListener(\"dblclick\", function(e) {\n        var input = document.createElement(\"input\");\n        var target = e.target;\n        var oldContent = e.target.textContent;\n        var field = target.getAttribute(\"data-row\");\n        if (!field) return;\n        input.classList.add(\"cell-input\");\n        target.textContent = \"\";\n        target.appendChild(input);\n        input.focus();\n        var saveChanges = function() {\n            var newValue = input.value.trim();\n            if (validateField(field, newValue)) {\n                if (field === \"salary\") target.textContent = \"$\".concat(addComa(newValue));\n                else target.textContent = newValue === \"\" ? oldContent : newValue;\n            } else target.textContent = oldContent;\n        };\n        input.addEventListener(\"blur\", saveChanges);\n        input.addEventListener(\"keydown\", function(ev) {\n            if (ev.key === \"Enter\") saveChanges();\n        });\n    });\n};\ntableRows.forEach(function(row) {\n    editRow(row);\n});\nfunction sortByText(rows, pos) {\n    rows.sort(function(a, b) {\n        var textOne = a.children[pos].textContent;\n        var textTwo = b.children[pos].textContent;\n        return orderSort ? textOne.localeCompare(textTwo) : textTwo.localeCompare(textOne);\n    });\n}\nfunction sortByNumber(rows, pos) {\n    rows.sort(function(a, b) {\n        var numOne = a.children[pos].textContent.replace(\",\", \"\").replace(\"$\", \"\");\n        var numTwo = b.children[pos].textContent.replace(\",\", \"\").replace(\"$\", \"\");\n        return orderSort ? numOne - numTwo : numTwo - numOne;\n    });\n}\nfunction updateTable(rows) {\n    tbody.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\ntableHeaders.forEach(function(th, index) {\n    th.addEventListener(\"click\", function(e) {\n        var copyTableRows = _to_consumable_array(tableRows);\n        if (e.currentTarget !== lastClickedHeader) orderSort = true;\n        else orderSort = !orderSort;\n        lastClickedHeader = e.currentTarget;\n        switch(e.currentTarget.textContent){\n            case \"Name\":\n            case \"Position\":\n            case \"Office\":\n                sortByText(copyTableRows, index);\n                break;\n            case \"Age\":\n            case \"Salary\":\n                sortByNumber(copyTableRows, index);\n                break;\n            default:\n                return;\n        }\n        updateTable(copyTableRows);\n    });\n});\n\n//# sourceMappingURL=index.24a793d0.js.map\n","'use strict';\n\nconst tableHeaders = [...document.querySelectorAll('thead th')];\nlet tableRows = [...document.querySelectorAll('tbody tr')];\nconst tbody = document.querySelector('tbody');\nlet orderSort = true;\nlet lastClickedHeader = null;\nlet indexRow = null;\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst createInput = (type, value, dataQa) => {\n  const input = document.createElement('input');\n\n  input.setAttribute('type', type);\n  input.setAttribute('name', value);\n  input.setAttribute('data-qa', dataQa);\n  input.setAttribute('required', true);\n\n  return input;\n};\n\nconst createLabel = (text) => {\n  const label = document.createElement('label');\n\n  label.textContent = text;\n\n  return label;\n};\n\nconst createOption = (text, value) => {\n  const option = document.createElement('option');\n\n  option.textContent = text;\n  option.setAttribute('value', value);\n\n  return option;\n};\n\nconst inputName = createInput('text', 'name', 'name');\nconst inputPosition = createInput('text', 'position', 'position');\nconst inputAge = createInput('number', 'age', 'age');\nconst inputSalary = createInput('number', 'salary', 'salary');\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\n\nconst labelName = createLabel('Name:');\nconst labelPosition = createLabel('Position:');\nconst labelCountry = createLabel('Country:');\nconst labelAge = createLabel('Age:');\nconst labelSalary = createLabel('Salary:');\n\nconst selectCountry = document.createElement('select');\n\nform.setAttribute('id', 'formEmployees');\nselectCountry.setAttribute('name', 'office');\nselectCountry.setAttribute('data-qa', 'office');\nbutton.setAttribute('type', 'submit');\nbutton.setAttribute('form', 'formEmployees');\n\nconst countries = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\ncountries.forEach((c) => selectCountry.appendChild(createOption(c, c)));\n\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelCountry.appendChild(selectCountry);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\n\nform.append(\n  labelName,\n  labelPosition,\n  labelCountry,\n  labelAge,\n  labelSalary,\n  button,\n);\n\ndocument.body.appendChild(form);\n\ntableRows.forEach((tr) => {\n  tr.children[0].setAttribute('data-row', 'name');\n  tr.children[1].setAttribute('data-row', 'position');\n  tr.children[2].setAttribute('data-row', 'office');\n  tr.children[3].setAttribute('data-row', 'age');\n  tr.children[4].setAttribute('data-row', 'salary');\n});\n\nconst showNotification = (message, type) => {\n  const div = document.createElement('div');\n\n  div.setAttribute('data-qa', 'notification');\n  div.style.display = 'flex';\n  div.style.justifyContent = 'center';\n  div.style.alignItems = 'center';\n  div.classList.add('notification', type);\n  div.textContent = message;\n  document.body.appendChild(div);\n\n  setTimeout(() => {\n    div.remove();\n  }, 3000);\n};\n\nconst validateInput = (obj) => {\n  if (obj.name.length < 4 || !obj.name.trim()) {\n    showNotification('Name must be at least 4 letters', 'error');\n\n    return false;\n  }\n\n  if (obj.position.length === 0 || !obj.position.trim()) {\n    showNotification('Position is required', 'error');\n\n    return false;\n  }\n\n  if (obj.age < 18 || obj.age > 90) {\n    showNotification('Age must be between 18 and 90', 'error');\n\n    return false;\n  }\n\n  if (obj.salary.length === 0 || obj.salary < 0) {\n    showNotification('Salary is required', 'error');\n\n    return false;\n  }\n\n  return true;\n};\n\nconst addComa = (value) => {\n  const improvedValue = ('' + value).split('').reverse();\n  let result = '';\n\n  for (let i = 0; i < improvedValue.length; i++) {\n    if (improvedValue.length >= 3) {\n      if (i % 3 === 0) {\n        result += ',';\n      }\n      result += improvedValue[i];\n    } else {\n      return value;\n    }\n  }\n\n  result = result.split('').reverse().join('');\n\n  if (result.endsWith(',')) {\n    result = result.slice(0, -1);\n  }\n\n  return result;\n};\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const formDataObj = Object.fromEntries(formData);\n\n  if (validateInput(formDataObj)) {\n    const tr = document.createElement('tr');\n\n    for (const key in formDataObj) {\n      const td = document.createElement('td');\n\n      td.setAttribute('data-qa', key);\n      td.setAttribute('data-row', key);\n\n      const value = formDataObj[key];\n\n      if (key === 'salary') {\n        td.textContent = `$${addComa(value)}`;\n      } else {\n        td.textContent = value;\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n    showNotification('You added the new employee', 'success');\n    editRow(tr);\n\n    for (const input of form) {\n      input.value = '';\n    }\n  }\n  updateTableRows();\n});\n\nconst updateTableRows = () => {\n  tableRows = [...document.querySelectorAll('tbody tr')];\n\n  tableRows.forEach((row, i) => {\n    row.addEventListener('click', () => {\n      const selectedRow = tableRows.find((r) => r.classList.contains('active'));\n\n      if (indexRow !== i) {\n        if (selectedRow) {\n          selectedRow.classList.remove('active');\n        }\n        row.classList.add('active');\n        indexRow = i;\n      }\n    });\n  });\n};\n\nupdateTableRows();\n\nconst validateField = (field, value) => {\n  switch (field) {\n    case 'name':\n      if (value.length < 4 || !value.trim()) {\n        showNotification('Name must be at least 4 letters', 'error');\n\n        return false;\n      }\n      break;\n\n    case 'position':\n      if (value.length === 0 || !value.trim()) {\n        showNotification('Position is required', 'error');\n\n        return false;\n      }\n      break;\n\n    case 'office':\n      if (value.length === 0 || !value.trim()) {\n        showNotification('Country is required', 'error');\n\n        return false;\n      }\n      break;\n\n    case 'age':\n      if (\n        value < 18 ||\n        value > 90 ||\n        !value.trim() ||\n        value.toLowerCase() !== value.toUpperCase()\n      ) {\n        showNotification('Age must be between 18 and 90', 'error');\n\n        return false;\n      }\n      break;\n    case 'salary':\n      if (\n        value.length === 0 ||\n        !value.trim() ||\n        +value < 0 ||\n        value.toLowerCase() !== value.toUpperCase()\n      ) {\n        showNotification('Salary is required', 'warning');\n\n        return false;\n      }\n      break;\n    default:\n      return true;\n  }\n\n  return true;\n};\n\nconst editRow = (row) => {\n  row.addEventListener('dblclick', (e) => {\n    const input = document.createElement('input');\n    const target = e.target;\n    const oldContent = e.target.textContent;\n\n    const field = target.getAttribute('data-row');\n\n    if (!field) {\n      return;\n    }\n\n    input.classList.add('cell-input');\n    target.textContent = '';\n    target.appendChild(input);\n    input.focus();\n\n    const saveChanges = () => {\n      const newValue = input.value.trim();\n\n      if (validateField(field, newValue)) {\n        if (field === 'salary') {\n          target.textContent = `$${addComa(newValue)}`;\n        } else {\n          target.textContent = newValue === '' ? oldContent : newValue;\n        }\n      } else {\n        target.textContent = oldContent;\n      }\n    };\n\n    input.addEventListener('blur', saveChanges);\n\n    input.addEventListener('keydown', (ev) => {\n      if (ev.key === 'Enter') {\n        saveChanges();\n      }\n    });\n  });\n};\n\ntableRows.forEach((row) => {\n  editRow(row);\n});\n\nfunction sortByText(rows, pos) {\n  rows.sort((a, b) => {\n    const textOne = a.children[pos].textContent;\n    const textTwo = b.children[pos].textContent;\n\n    return orderSort\n      ? textOne.localeCompare(textTwo)\n      : textTwo.localeCompare(textOne);\n  });\n}\n\nfunction sortByNumber(rows, pos) {\n  rows.sort((a, b) => {\n    const numOne = a.children[pos].textContent\n      .replace(',', '')\n      .replace('$', '');\n    const numTwo = b.children[pos].textContent\n      .replace(',', '')\n      .replace('$', '');\n\n    return orderSort ? numOne - numTwo : numTwo - numOne;\n  });\n}\n\nfunction updateTable(rows) {\n  tbody.innerHTML = '';\n  rows.forEach((row) => tbody.appendChild(row));\n}\n\ntableHeaders.forEach((th, index) => {\n  th.addEventListener('click', (e) => {\n    const copyTableRows = [...tableRows];\n\n    if (e.currentTarget !== lastClickedHeader) {\n      orderSort = true;\n    } else {\n      orderSort = !orderSort;\n    }\n    lastClickedHeader = e.currentTarget;\n\n    switch (e.currentTarget.textContent) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        sortByText(copyTableRows, index);\n        break;\n      case 'Age':\n      case 'Salary':\n        sortByNumber(copyTableRows, index);\n        break;\n      default:\n        return;\n    }\n    updateTable(copyTableRows);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableHeaders","document","querySelectorAll","tableRows","tbody","querySelector","orderSort","lastClickedHeader","indexRow","form","createElement","classList","add","createInput","type","value","dataQa","input","setAttribute","createLabel","text","label","textContent","createOption","option","inputName","inputPosition","inputAge","inputSalary","button","labelName","labelPosition","labelCountry","labelAge","labelSalary","selectCountry","countries","forEach","c","appendChild","append","body","tr","children","showNotification","message","div","style","display","justifyContent","alignItems","setTimeout","remove","addComa","improvedValue","split","reverse","result","join","endsWith","addEventListener","e","preventDefault","formDataObj","fromEntries","FormData","obj","trim","position","age","salary","key","td","concat","editRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","err","return","updateTableRows","row","selectedRow","find","r","contains","validateField","field","toLowerCase","toUpperCase","target","oldContent","getAttribute","focus","saveChanges","newValue","ev","th","index","copyTableRows","currentTarget","sortByText","rows","pos","sort","a","b","textOne","textTwo","localeCompare","sortByNumber","numOne","replace","numTwo","innerHTML"],"version":3,"file":"index.24a793d0.js.map"}